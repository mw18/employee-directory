{"version":3,"sources":["components/SortTable.js","components/SearchBar.js","components/Header.js","App.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","BasicTable","users","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","funColor","TableCell","align","TableBody","map","user","index","src","picture","thumbnail","alt","scope","name","title","first","last","email","DateFormat","dob","date","login","uuid","SearchBar","props","htmlFor","value","search","onChange","handleInputChange","list","type","placeholder","id","Jumbotron","App","useState","setUsers","useEffect","console","log","a","fetch","response","json","data","results","fetchData","Header","ReactDOM","render","document","getElementById"],"mappings":"qVAYMA,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAYC,SAASC,EAAT,GAA8B,IAATC,EAAQ,EAARA,MAC5BC,EAAUN,IAMhB,OACE,cAACO,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,UAAS,UAAKL,EAAQJ,OAAQU,aAAW,eAAhD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAUH,UAAWL,EAAQS,SAA7B,UACE,cAACC,EAAA,EAAD,CAAWC,MAAM,OAAjB,mBACA,cAACD,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,kBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBAGJ,cAACC,EAAA,EAAD,UACCb,EAAMc,KAAI,SAACC,EAAMC,GAAP,OACL,eAACP,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,UAAY,qBAAKM,IAAKF,EAAKG,QAAQC,UAAWC,IAAI,gBAClD,cAACT,EAAA,EAAD,CAAWR,UAAU,KAAKkB,MAAM,MAAhC,SAAuCN,EAAKO,KAAKC,QACjD,cAACZ,EAAA,EAAD,CAAWC,MAAM,QAASN,UAAWL,EAAQS,SAA7C,SAAwDK,EAAKO,KAAKE,QAClE,cAACb,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAKO,KAAKG,OACpC,cAACd,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAKW,QAC/B,cAACf,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0Be,IAAWZ,EAAKa,IAAIC,KAAM,iBANvCd,EAAKe,MAAMC,gBCxBzBC,MApBf,SAAmBC,GACjB,OACE,sBAAM3B,UAAU,SAAhB,SACE,sBAAKA,UAAU,aAAf,UACE,uBAAO4B,QAAQ,WAAf,0BACA,uBACEC,MAAOF,EAAMG,OACbC,SAAUJ,EAAMK,kBAChBhB,KAAK,OACLiB,KAAK,OACLC,KAAK,OACLlC,UAAU,eACVmC,YAAY,+BACZC,GAAG,eCFEC,MAbf,WACE,OACA,8BACE,qBAAKrC,UAAU,4BAA4BoC,GAAG,YAA9C,SACE,sBAAKpC,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,SAA0B,oDAC1B,mBAAGA,UAAU,OAAb,qC,MCiCOsC,MAlCf,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACN7C,EADM,KACC8C,EADD,KAsBb,OAnBAC,qBAAU,WACRC,QAAQC,IAAI,aAEG,uCAAG,8BAAAC,EAAA,+EAESC,MAAO,yCAFhB,cAERC,EAFQ,gBAGKA,EAASC,OAHd,OAGRC,EAHQ,OAIdR,EAAS,YAAIQ,EAAKC,UAJJ,kDAMdP,QAAQC,IAAR,MANc,0DAAH,oDAUfO,KAEC,IAEHR,QAAQC,IAAI,SAAUjD,GACtB+C,qBAAU,kBAAKC,QAAQC,IAAK,SAAUjD,MAEpC,sBAAKM,UAAU,YAAf,UACE,cAACmD,EAAD,IACA,cAAC,EAAD,IACC,cAAC,EAAD,CACDzD,MAAOA,Q,MC3Bb0D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a77d2b8d.chunk.js","sourcesContent":["//BasicTable.js\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DateFormat from 'dateformat';\nimport TablePagination from '@material-ui/core/TablePagination';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  // color1: {\n  //   backgroundColor: \"purple\"\n  // },\n  // color2: {\n  //   backgroundColor: \"yellow\"\n  // },\n  // color3: {\n  //   backgroundColor: \"grey\"\n  // }\n});\nexport default function BasicTable({users}) {\n  const classes = useStyles();\n  const rowColor = (gender) => {\n    return gender === \"male\" ? classes.color1 \n            : gender === \"female\" ? classes.color2 \n            : classes. color3\n  } \n  return (\n    <TableContainer component={Paper}>\n      <Table className={`${classes.table}`}aria-label=\"simple table\">\n        <TableHead>\n          <TableRow className={classes.funColor}>\n            <TableCell align=\"left\">Image</TableCell>\n            <TableCell>Title</TableCell>\n            <TableCell align=\"right\">First</TableCell>\n            <TableCell align=\"right\">Last</TableCell>\n            <TableCell align=\"right\">Email</TableCell>\n            <TableCell align=\"right\">DOB</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {users.map((user, index) => (\n              <TableRow key={user.login.uuid} >\n                <TableCell ><img src={user.picture.thumbnail} alt=\"thumbnail\" /></TableCell>\n                <TableCell component=\"th\" scope=\"row\">{user.name.title}</TableCell>\n                <TableCell align=\"right\"  className={classes.funColor}>{user.name.first}</TableCell>\n                <TableCell align=\"right\">{user.name.last}</TableCell>\n                <TableCell align=\"right\">{user.email}</TableCell>\n                <TableCell align=\"right\">{DateFormat(user.dob.date, \"shortDate\")}</TableCell>\n              </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n\n   \n    </TableContainer>\n  )\n}","import React from \"react\";\n\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchBar(props) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"language\">Search Term:</label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"term\"\n          list=\"term\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type in an employee to begin\"\n          id=\"term\"\n        />\n      </div>\n    </form>\n  );\n}\n\nexport default SearchBar;\n","import React from \"react\";\n\nfunction Jumbotron() {\n  return (\n  <div>\n    <div className=\"jumbotron jumbotron-fluid\" id=\"jumboTron\">\n      <div className=\"container\">\n        <h1 className=\"display-4\"><p>Company Directory</p></h1>\n        <p className=\"lead\">Search below...</p>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default Jumbotron;","import React, {useState, useEffect}from \"react\";\n\nimport SortTable from \"./components/SortTable\";\nimport SearchBar from './components/SearchBar';\nimport Header from \"./components/Header\";\nimport \"./App.css\";\n\nfunction App() {\n  const [users, setUsers] =  useState([])\n\n  useEffect(()=> {\n    console.log('useEffect')\n\n    const fetchData = async () => {\n      try{\n        const response = await fetch ('https://randomuser.me/api/?results=50')\n        const data = await response.json()\n        setUsers([...data.results])\n      }catch(e) {\n        console.log(e);\n      }\n    }\n\n    fetchData()\n\n  }, [])\n\n  console.log('users1', users)\n  useEffect(()=> console.log ('users2', users))\n  return (\n    <div className=\"container\">\n      <Header />\n      <SearchBar />\n       <SortTable\n      users={users}\n      />  \n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from '../serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}